name: Rust

env:
  min_rust_version: "1.74.0"

on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/rust.yml'
      - 'src/**.rs'
      - 'tests/**.rs'
      - 'Cargo.toml'
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - '**'
    paths:
      - '.github/workflows/rust.yml'
      - 'src/**.rs'
      - 'tests/**.rs'
      - 'Cargo.toml'

jobs:
  min-rust-check:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust Unix
      run: |
        if rustup --version >/dev/null 2>&1; then
            rustup install ${{ env.min_rust_version }}
            rustup default ${{ env.min_rust_version }}
        else
            curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal --default-toolchain ${{ env.min_rust_version }}
            echo ::add-path::$HOME/.cargo/bin
        fi
    - name: Rust version
      run: |
        cargo --version
        rustc --version
    - name: Check
      run: cargo check --features alloc

  build:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust Unix
      run: |
        if rustup --version >/dev/null 2>&1; then
            rustup update
        else
             curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal --default-toolchain stable
             echo ::add-path::$HOME/.cargo/bin
        fi

    - name: Install Miri
      run: |
        rustup toolchain install nightly
        rustup +nightly component add miri

    - name: Rust Cache
      uses: Swatinem/rust-cache@v2

    - name: Install Valgrind
      run: |
        sudo apt-get update
        sudo apt-get install -y valgrind

    - name: Rust version
      run: |
        cargo --version
        rustc --version

    - name: Check build
      run: cargo clippy --features alloc

    - name: Test
      run: cargo test --features alloc

    - name: Valgrind Test
      env:
        CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_RUNNER: "valgrind --leak-check=full --error-exitcode=1 --gen-suppressions=all --suppressions=valgrind.supp"
      run: cargo test --release --features alloc

    - name: Valgrind Test (no SSE2)
      env:
        CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_RUNNER: "valgrind --leak-check=full --error-exitcode=1 --gen-suppressions=all --suppressions=valgrind.supp"
        RUSTFLAGS: "-C target-feature=-sse2"
      run: cargo test --release --features alloc

    - name: Miri Test
      run: |
          cargo +nightly miri test --features alloc
